@model RebornCheckerBoardMain.Models.IssueToken.IssueTokenModel

@{
    // what displays in the browser tab
    ViewBag.Title = "Verify Issue Token";
}

<h2>Issue Token </h2>
<script type="text/javascript" src="~/Scripts/jquery-3.1.1.js"></script>
<script type="text/javascript" src="~/Scripts/jquery.validate.min.js"></script>
<script type="text/javascript" src="~/Scripts/jquery.validate.unobtrusive.min.js"></script>
<script>
    var my = this;
    $(document).ready(function () {
        // hide the alert on loading ONLY
        $("#successalert").hide();
        $("#TokenValueTypeSelected").show();
        my.token = {
            TokenCode: '@Model.TokenCode',
            TokenType: '@Model.TokenType',
            TokenValue: '@Model.TokenValue',
            TokenContent: '@Model.TokenContent',
            Reason: '@Model.Reason',
            EmailAddress: '@Model.EmailAddress',
            Comments: '@Model.Comments',
            Status: @Model.Status.ToString().ToLower()
        };

        $("#btnSubmitDB").click(function () {
            //calls "handleVerify" from controller, pass in my.token & calls onSaveSuccess function
            // once this controller function has been read
            $.post("/IssueTokenModels/HandleVerify", my.token, onSaveSuccess);

            function onSaveSuccess() {
                // first pop up your modal dialog saying that you saved some stuff
                $("#successalert").show();
            };
             // then do a browser redirect back to the index page -- .this one isn't working'
            $("#successalert").on("close.bs.alert", function () {
                document.location = "@Url.Action("Index","Home")"
            });
        });           
        // selecting cancel
       $("#Cancel-button").click(function () {
            document.location = "@Url.Action("Index","Home")"
        });
    });
</script>

<div class="form-horizontal">
    <div class="form-group">
        @Html.LabelFor(model => model.TokenType, htmlAttributes: new { @class = "control-label col-md-2" })
        @*On selecting a type call the tokenValView*@
        <div class="col-md-10">
            @Html.DisplayFor(model => model.TokenType, new { @id = "TokenType", @readonly = "readonly" }) <br />
            @*By using "readonly" as a attribute above, we ensure the user cannot change the value.*@
        </div>
    </div>
    <div class="form-group">
        @Html.LabelFor(model => model.TokenContent, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.DisplayFor(model => model.TokenContent, new { @id = "TokenContentTypeSelected", @readonly = "readonly" })
        </div>
    </div>

    @*Load value associated with the Token Chosen  *@
    <div class="form-group">
        @Html.LabelFor(model => model.TokenValue, htmlAttributes: new { @class = "control-label col-md-2" })
        @*<input type="number" id="SubscriptionVal" style="display: none;" />*@
        <div class="col-md-10">
            @*So I have the token value, however trying to access the ItokenValue*@
            @Html.DisplayFor(model => model.TokenValue, new { @id = "TokenValueTypeSelected", @readonly = "readonly" })
        </div>
    </div>

    @*Reason Drop down*@
    <div class="form-group">
        <label for="Reason" class="control-label col-md-2"> Reason</label>
        <div class="col-md-10">
            @Html.DisplayFor(model => model.Reason, new { @id = "ReasonSelected", @readonly = "readonly" })
        </div>
    </div>

    @*Redeem To Account *@
    <div class="form-group">
        <label for="EmailAddress" class="control-label col-md-2"> Redeem To Account</label>
        <div class="col-md-10">
            @Html.DisplayFor(model => model.EmailAddress, new { @id = "EmailEntered", @readonly = "readonly" })
        </div>
    </div>

    @*Comments*@
    <div class="form-group">
        @Html.LabelFor(model => model.Comments, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.DisplayFor(model => model.Comments, new { @readonly = "readonly" })
        </div>
    </div>

    @*select to go to Verification page*@
    <div class="form-group">
        <div class="col-md-offset-2 col-md-offset-10">
            @*select to go to Verification page, function is in the HandleVerify method in controller*@
            <input type="button" id="btnSubmitDB" name="command" value="Issue Token" class="btn btn-default" />

            <input id="Cancel-button" type="button" value="Cancel" class="btn btn-default" />
        </div>
    </div>
</div>
@*Success Alert, when closed redirect the page to...*@
<div class="alert alert-success alert-dismissable" id="successalert">
    <a href="#" class="close" data-dismiss="alert" aria-label="close" >×</a>
    <strong>The Token requested has been successfully issued</strong> 
</div>

