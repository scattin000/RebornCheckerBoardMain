@model RebornCheckerBoardMain.Models.IssueToken.IssueTokenModel

@{
    ViewBag.Title = "Verify Issue Token";
}

<h2>Issue Token </h2>
<script type="text/javascript" src="~/Scripts/jquery-3.1.1.js"></script>
<script type="text/javascript" src="~/Scripts/jquery.validate.min.js"></script>
<script type="text/javascript" src="~/Scripts/jquery.validate.unobtrusive.min.js"></script>
<script>
    $(document).ready(function () {
        // I'll leave this hook in here for you in case you need to add anything jQuery related later.
    });
</script>

<p>
    @using (Html.BeginForm("HandleVerify", "IssueTokenModels", FormMethod.Post))
    {
        @Html.ValidationSummary(true)
        @Html.AntiForgeryToken()
        <div class="form-group">
            <h4>Token Type</h4>
            <div class="col-md-10" id="SelectType" onblur="tokenValView(this.value)">
                @Html.TextBoxFor(model => model.TokenType, new { @id = "TokenType", @readonly = "readonly" }) <br />
                @*By using "readonly" as a attribute above, we ensure the user cannot change the value.*@
                @*We are using a textbox here instead of a dropdown because we aren't editing the value here anymore.*@
            </div>

        </div>
        <div class="form-group">
            <h4>Token Content</h4>
            @Html.TextBoxFor(model => model.TokenContent, new { @id = "GameTokenContentTypes", @readonly = "readonly"  })
        </div>

        @*Load value associated with the Token Chosen  *@
        <div class="form-group">
            <label for="SubscriptionVal, GameVal ">Token Value </label>
            <input type="number" class="form-control" id="SubscriptionVal" style="display: none;" />
            @*So I have the token value, however trying to access the ItokenValue*@
            @Html.TextBoxFor(model => model.TokenValue, new { @id = "SubscriptionTokenValueTypes", @readonly = "readonly" })


            @*Reason Drop down*@
            <div class="form-group">
                <label for="Reason">Reason</label>
                @Html.TextBoxFor(model => model.Reason, new { @id = "ReasonSelected", @readonly = "readonly" })
            </div>

            @*Redeem To Account *@
            <div class="form-group">
                <label for="Reason"> Redeem To Account</label>
                @Html.TextBoxFor(model => model.EmailAddress, new { @id = "EmailEntered", @readonly = "readonly" })
            </div>

            @*Comments*@
            <div class="form-group">
                <label for="comment">Comments</label>
                @Html.TextAreaFor(model => model.Comments, new { @readonly = "readonly" })
                @*Add required text & Clear the required field when entered*@
            </div>
        </div>
        @*select to go to Verification page (details)*@
        <div class="form-group">
            <div class="col-md-offset-2 col-md-offset-10">
                <input type="submit" value="Issue Token" class="btn btn-default" />
                <input type="button" value="Cancel" onclick="parent.location + '/index.html'" class="btn btn-default"/>
            </div>
        </div>
    }
</p>

@*
    <table class="table">
        <tr>
            <th>
                @Html.DisplayNameFor(model => model.TokenType)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.TokenContent)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Reason)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.EmailAddress)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Comments)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Status)
            </th>
            <th></th>
        </tr>

        @foreach (var item in Model) {
            <tr>
                <td>
                    @Html.DisplayFor(modelItem => item.TokenType)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.TokenContent)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Reason)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.EmailAddress)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Comments)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Status)
                </td>
                <td>
                    @Html.ActionLink("Edit", "Edit", new { id=item.TokenCode }) |
                    @Html.ActionLink("Details", "Details", new { id=item.TokenCode }) |
                    @Html.ActionLink("Delete", "Delete", new { id=item.TokenCode })
                </td>
            </tr>
        }

*@

</table>
