@model IEnumerable<RebornCheckerBoardMain.Models.TokenCategory>

@{
    ViewBag.Title = "Index";
}

<h2>Index</h2>

<p>
    @Html.ActionLink("Create New", "Create")

    @*Token Type Selection here :): Display the page as "Issue Token" & the
        *@
    @using (Html.BeginForm())
    {
    <p>
        <h4>Token Type</h4>
        @Html.DropDownList("SearchType", "All") <br />
        @*Add required text & Clear the required field when entered*@
        <h4>Token Content</h4>
        @Html.DropDownList("searchContent", "All")<br />
        @*Add required text & Clear the required field when entered*@
        <h4>Token Value</h4>

        <h4>Reason</h4>
        <div class="form-group">
            <select class="form-control">
                <option>Reason1</option>
                <option>Reason2</option>
                <option>Reason3</option>
                <option>Reason4</option>
                <option>Reason5</option>
                <option>Reason6</option>
                <option>Reason7</option>
            </select>
        </div>
        <div class="form-group">
            <label for="email">Redeem To Account</label>
            <input type="email" class="form-control" id="email">
            @*Add required text// Check valid format// Clear the required field when entered*@
        </div>
        <div class="form-group">
            <label for="comment">Comments</label>
            <textarea class="form-control" rows="5" id="comment"></textarea>
            @*Add required text & Clear the required field when entered*@
        </div>
        @*Enable this next ONLY when all required fields are entered... and leads to a verification page*@
        <input type="submit" value="Next >"/>
    </p> 
    }
    
</p>
<table class="table">
    <tr>
        <th>
            @Html.DisplayNameFor(model => model.Type)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.Content)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.Value)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.ValueLabel)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.ValueRange)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.ValueMin)
        </th>
        <th></th>
    </tr>

@foreach (var item in Model) {
    <tr>
        <td>
            @Html.DisplayFor(modelItem => item.Type)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.Content)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.Value)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.ValueLabel)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.ValueRange)
        </td>
        <td>
            @Html.DisplayNameFor(model => model.ValueMin)
        </td>
        <td>
            @Html.ActionLink("Edit", "Edit", new { id=item.ID }) |
            @Html.ActionLink("Details", "Details", new { id=item.ID }) |
            @Html.ActionLink("Delete", "Delete", new { id=item.ID })
        </td>
    </tr>
}

</table>
